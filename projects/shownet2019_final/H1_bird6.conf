router id 10.255.0.88;

protocol device dev0 {}

protocol kernel ker0 {
	learn;
	export all;
	import all;
}

table inet;
protocol kernel ker90 {
	learn;
	export all;
	import all;
	table inet;
	kernel table 90;
}
table user;
protocol kernel ker91 {
	learn;
	export all;
	import all;
	table user;
	kernel table 91;
}
table func1_up;
protocol kernel ker10 {
	learn;
	export all;
	import all;
	table func1_up;
	kernel table 10;
}
table func1_dn;
protocol kernel ker11 {
	learn;
	export all;
	import all;
	table func1_dn;
	kernel table 11;
}
table func2_up;
protocol kernel ker20 {
	learn;
	export all;
	import all;
	table func2_up;
	kernel table 20;
}
table func2_dn;
protocol kernel ker21 {
	learn;
	export all;
	import all;
	table func2_dn;
	kernel table 21;
}
table func3_up;
protocol kernel ker30 {
	learn;
	export all;
	import all;
	table func3_up;
	kernel table 30;
}
table func3_dn;
protocol kernel ker31 {
	learn;
	export all;
	import all;
	table func3_dn;
	kernel table 31;
}
table func4_up;
protocol kernel ker40 {
	learn;
	export all;
	import all;
	table func4_up;
	kernel table 40;
}
table func4_dn;
protocol kernel ker41 {
	learn;
	export all;
	import all;
	table func4_dn;
	kernel table 41;
}

protocol direct dir90 { table inet; interface "to_inet"; }
protocol direct dir91 { table user; interface "to_user"; }
protocol direct dir10 { table func1_up; interface "vlan0701"; }
protocol direct dir11 { table func1_dn; interface "vlan0721"; }
protocol direct dir20 { table func2_up; interface "vlan0702"; }
protocol direct dir21 { table func2_dn; interface "vlan0722"; }
protocol direct dir30 { table func3_up; interface "vlan0703"; }
protocol direct dir31 { table func3_dn; interface "vlan0723"; }
protocol direct dir40 { table func4_up; interface "vlan0704"; }
protocol direct dir41 { table func4_dn; interface "vlan0724"; }

protocol static static_inet {
	vrf "inet";
	table inet;
	route beaf::/64 via "to_inet";
	route fc1::/64 blackhole;
}
protocol static static_user {
	vrf "user";
	table user;
	route face::/64 via "to_user";
	route fc0::/64 blackhole;
}
protocol static static_func1_up {
	vrf "func1_up";
	table func1_up;
	route fc1::1/128 blackhole;
}
protocol static static_func1_dn {
	vrf "func1_dn";
	table func1_dn;
	route fc0::1/128 blackhole;
}
protocol static static_func2_up { vrf "func2_up"; table func2_up; route fc1::2/128 blackhole; }
protocol static static_func2_dn { vrf "func2_dn"; table func2_dn; route fc0::2/128 blackhole; }
protocol static static_func3_up { vrf "func3_up"; table func3_up; route fc1::3/128 blackhole; }
protocol static static_func3_dn { vrf "func3_dn"; table func3_dn; route fc0::3/128 blackhole; }
protocol static static_func4_up { vrf "func4_up"; table func4_up; route fc1::4/128 blackhole; }
protocol static static_func4_dn { vrf "func4_dn"; table func4_dn; route fc0::4/128 blackhole; }

protocol ospf ospf_func1_up {
	vrf "func1_up"; table func1_up;
	router id 10.255.1.210;
	export filter {
		if net ~ [ beaf::/64 ] then accept;
		if net ~ [ fc0::/64 ] then accept;
		if net ~ [ fc1::/64 ] then accept;
		if net ~ [ fc1::1/128 ] then accept;
		reject;
	};
	import all;
	area 0.0.0.0 { interface "vlan0701" { hello 1; wait 4; type bcast; }; };
}
protocol ospf ospf_func1_dn {
	vrf "func1_dn"; table func1_dn;
	router id 10.255.1.211;
	export filter {
		if net ~ [ face::/64 ] then accept;
		if net ~ [ fc0::/64 ] then accept;
		if net ~ [ fc1::/64 ] then accept;
		if net ~ [ fc0::1/128 ] then accept;
		reject;
	};
	import all;
	area 0.0.0.0 { interface "vlan0721" { hello 1; wait 4; type bcast; }; };
}
protocol ospf ospf_func2_up {
	vrf "func2_up"; table func2_up;
	router id 10.255.1.220;
	export filter {
		if net ~ [ beaf::/64 ] then accept;
		if net ~ [ fc0::/64 ] then accept;
		if net ~ [ fc1::/64 ] then accept;
		if net ~ [ fc1::2/128 ] then accept;
		reject;
	};
	import all;
	area 0.0.0.0 { interface "vlan0702" { hello 1; wait 4; type bcast; }; };
}
protocol ospf ospf_func2_dn {
	vrf "func2_dn"; table func2_dn;
	router id 10.255.1.221;
	export filter {
		if net ~ [ face::/64 ] then accept;
		if net ~ [ fc0::/64 ] then accept;
		if net ~ [ fc1::/64 ] then accept;
		if net ~ [ fc0::2/128 ] then accept;
		reject;
	};
	import all;
	area 0.0.0.0 { interface "vlan0722" { hello 1; wait 4; type bcast; }; };
}
protocol ospf ospf_func3_up {
	vrf "func3_up"; table func3_up;
	router id 10.255.1.230;
	export filter {
		if net ~ [ beaf::/64 ] then accept;
		if net ~ [ fc0::/64 ] then accept;
		if net ~ [ fc1::/64 ] then accept;
		if net ~ [ fc1::3/128 ] then accept;
		reject;
	};
	import all;
	area 0.0.0.0 { interface "vlan0703" { hello 1; wait 4; type bcast; }; };
}
protocol ospf ospf_func3_dn {
	vrf "func3_dn"; table func3_dn;
	router id 10.255.1.231;
	export filter {
		if net ~ [ face::/64 ] then accept;
		if net ~ [ fc0::/64 ] then accept;
		if net ~ [ fc1::/64 ] then accept;
		if net ~ [ fc0::3/128 ] then accept;
		reject;
	};
	import all;
	area 0.0.0.0 { interface "vlan0723" { hello 1; wait 4; type bcast; }; };
}
protocol ospf ospf_func4_up {
	vrf "func4_up"; table func4_up;
	router id 10.255.1.240;
	export filter {
		if net ~ [ beaf::/64 ] then accept;
		if net ~ [ fc0::/64 ] then accept;
		if net ~ [ fc1::/64 ] then accept;
		if net ~ [ fc1::4/128 ] then accept;
		reject;
	};
	import all;
	area 0.0.0.0 { interface "vlan0704" { hello 1; wait 4; type bcast; }; };
}
protocol ospf ospf_func4_dn {
	vrf "func4_dn"; table func4_dn;
	router id 10.255.1.241;
	export filter {
		if net ~ [ face::/64 ] then accept;
		if net ~ [ fc0::/64 ] then accept;
		if net ~ [ fc1::/64 ] then accept;
		if net ~ [ fc0::4/128 ] then accept;
		reject;
	};
	import all;
	area 0.0.0.0 { interface "vlan0724" { hello 1; wait 4; type bcast; }; };
}

protocol pipe func1_up_inet {
	table inet;
	peer table func1_up;
	export filter {
		if net ~ [ beaf::/64] then accept;
		if net ~ [ fc1::/64 ] then accept;
		reject;
	};
	import filter {
		if net ~ [ fc0::1/128 ] then accept;
		reject;
	};
}
protocol pipe func1_dn_user {
	table user;
	peer table func1_dn;
	export filter {
		if net ~ [ face::/64] then accept;
		if net ~ [ fc0::/64 ] then accept;
		reject;
	};
	import filter {
		if net ~ [ fc1::1/128 ] then accept;
		reject;
	};
}
protocol pipe func1_up_user {
	table user;
	peer table func1_up;
	export filter {
		if net ~ [ fc1::2/128 ] then accept;
		if net ~ [ fc1::3/128 ] then accept;
		if net ~ [ fc1::4/128 ] then accept;
		reject;
	};
	import filter { reject; };
}
protocol pipe func1_dn_inet {
	table inet;
	peer table func1_dn;
	export filter {
		if net ~ [ fc0::2/128 ] then accept;
		if net ~ [ fc0::3/128 ] then accept;
		if net ~ [ fc0::4/128 ] then accept;
		reject;
	};
	import filter { reject; };
}

protocol pipe func2_up_inet {
	table inet;
	peer table func2_up;
	export filter {
		if net ~ [ beaf::/64] then accept;
		if net ~ [ fc1::/64 ] then accept;
		reject;
	};
	import filter {
		if net ~ [ fc0::2/128 ] then accept;
		reject;
	};
}
protocol pipe func2_dn_user {
	table user;
	peer table func2_dn;
	export filter {
		if net ~ [ face::/64] then accept;
		if net ~ [ fc0::/64 ] then accept;
		reject;
	};
	import filter {
		if net ~ [ fc1::2/128 ] then accept;
		reject;
	};
}
protocol pipe func2_up_user {
	table user;
	peer table func2_up;
	export filter {
		if net ~ [ fc1::1/128 ] then accept;
		if net ~ [ fc1::3/128 ] then accept;
		if net ~ [ fc1::4/128 ] then accept;
		reject;
	};
	import filter { reject; };
}
protocol pipe func2_dn_inet {
	table inet;
	peer table func2_dn;
	export filter {
		if net ~ [ fc0::1/128 ] then accept;
		if net ~ [ fc0::3/128 ] then accept;
		if net ~ [ fc0::4/128 ] then accept;
		reject;
	};
	import filter { reject; };
}

protocol pipe func3_up_inet {
	table inet;
	peer table func3_up;
	export filter {
		if net ~ [ beaf::/64] then accept;
		if net ~ [ fc1::/64 ] then accept;
		reject;
	};
	import filter {
		if net ~ [ fc0::3/128 ] then accept;
		reject;
	};
}
protocol pipe func3_dn_user {
	table user;
	peer table func3_dn;
	export filter {
		if net ~ [ face::/64] then accept;
		if net ~ [ fc0::/64 ] then accept;
		reject;
	};
	import filter {
		if net ~ [ fc1::3/128 ] then accept;
		reject;
	};
}
protocol pipe func3_up_user {
	table user;
	peer table func3_up;
	export filter {
		if net ~ [ fc1::1/128 ] then accept;
		if net ~ [ fc1::2/128 ] then accept;
		if net ~ [ fc1::4/128 ] then accept;
		reject;
	};
	import filter { reject; };
}
protocol pipe func3_dn_inet {
	table inet;
	peer table func3_dn;
	export filter {
		if net ~ [ fc0::1/128 ] then accept;
		if net ~ [ fc0::2/128 ] then accept;
		if net ~ [ fc0::4/128 ] then accept;
		reject;
	};
	import filter { reject; };
}

protocol pipe func4_up_inet {
	table inet;
	peer table func4_up;
	export filter {
		if net ~ [ beaf::/64] then accept;
		if net ~ [ fc1::/64 ] then accept;
		reject;
	};
	import filter {
		if net ~ [ fc0::4/128 ] then accept;
		reject;
	};
}
protocol pipe func4_dn_user {
	table user;
	peer table func4_dn;
	export filter {
		if net ~ [ face::/64] then accept;
		if net ~ [ fc0::/64 ] then accept;
		reject;
	};
	import filter {
		if net ~ [ fc1::4/128 ] then accept;
		reject;
	};
}
protocol pipe func4_up_user {
	table user;
	peer table func4_up;
	export filter {
		if net ~ [ fc1::1/128 ] then accept;
		if net ~ [ fc1::2/128 ] then accept;
		if net ~ [ fc1::3/128 ] then accept;
		reject;
	};
	import filter { reject; };
}
protocol pipe func4_dn_inet {
	table inet;
	peer table func4_dn;
	export filter {
		if net ~ [ fc0::1/128 ] then accept;
		if net ~ [ fc0::2/128 ] then accept;
		if net ~ [ fc0::3/128 ] then accept;
		reject;
	};
	import filter { reject; };
}
